[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ceas authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rachel House. Author, maintainer. James Eapen. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"House R, Eapen J (2023). ceas: Cellular Energetics Analysis Software. https://jamespeapen.githu.io/ceas, https://github.com/jamespeapen/ceas.","code":"@Manual{,   title = {ceas: Cellular Energetics Analysis Software},   author = {Rachel House and James Eapen},   year = {2023},   note = {https://jamespeapen.githu.io/ceas, https://github.com/jamespeapen/ceas}, }"},{"path":"/index.html","id":"ceas-","dir":"","previous_headings":"","what":"Cellular Energetics Analysis Software","title":"Cellular Energetics Analysis Software","text":"Cellular Energetics Analysis Software","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Cellular Energetics Analysis Software","text":"Analysis visualization cellular energetics data Agilent Seahorse XF96. Cellular energetics cells make, use, distribute units energy (primarily ATP). Measuring real-time cellular energetics essential understanding tissue cell’s bioenergetic state fuel dependencies. Seahorse machine measures cell’s matrix’s oxygen consumption rate (OCR) – proxy oxidative phosphorylation – extracellular acidification rate – proxy glycolysis. package offers flexible fast analysis plotting capabilities data.","code":""},{"path":[]},{"path":"/index.html","id":"github","dir":"","previous_headings":"Installation","what":"Github","title":"Cellular Energetics Analysis Software","text":"can install Github cloning repo running can also use R devtools package:","code":"git clone https://github.com/jamespeapen/ceas R CMD INSTALL ceas devtools::install_github(\"jamespeapen/ceas\")"},{"path":"/reference/bioscope_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioenergetic Scope Plot — bioscope_plot","title":"Bioenergetic Scope Plot — bioscope_plot","text":"Generate Bioenergetic Scope Plot","code":""},{"path":"/reference/bioscope_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bioenergetic Scope Plot — bioscope_plot","text":"","code":"bioscope_plot(   energetics,   error_bar = \"ci\",   conf_int = 0.95,   size = 2,   shape = 21 )"},{"path":"/reference/bioscope_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bioenergetic Scope Plot — bioscope_plot","text":"energetics table calculated glycolysis OXPHOS rates. Returned get_energetics error_bar Whether plot error bars standard deviation (\"sd\") confidence intervals (\"ci\") conf_int confidence interval percentage. 0 1 size Size points shape Shape points bioscope_plot Creates 2D plot visualizing mean standard deviation basal maximal ATP production glycolysis OXPHOS experimental group","code":""},{"path":"/reference/bioscope_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bioenergetic Scope Plot — bioscope_plot","text":"ggplot","code":""},{"path":"/reference/bioscope_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bioenergetic Scope Plot — bioscope_plot","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) # reads in data partitioned_data <- partition_data(seahorse_rates) energetics <- get_energetics(partitioned_data, ph = 7.4, pka = 6.093, buffer = 0.1) bioscope_plot(energetics)   # to change fill, the geom_point shape number should be between 15 and 25 bioscope_plot(energetics, shape = 21) + # filled circle   ggplot2::scale_fill_manual(values = c(\"#e36500\", \"#b52356\", \"#3cb62d\", \"#328fe1\"))   # to change color use ggplot2::scale_color_manual bioscope_plot(energetics) +   ggplot2::scale_color_manual(values = c(\"#e36500\", \"#b52356\", \"#3cb62d\", \"#328fe1\"))"},{"path":"/reference/ceas-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ceas: Cellular Energetics Analysis Software — ceas-package","title":"ceas: Cellular Energetics Analysis Software — ceas-package","text":"'Analysis visualization cellular energetics data Agilent Seahorse XF96. Cellular energetics cells make, use, distribute units energy (primarily ATP). Measuring real-time cellular energetics essential understanding tissue cell’s bioenergetic state fuel dependencies. Seahorse machine measures cell’s matrix’s oxygen consumption rate (OCR) – proxy oxidative phosphorylation – extracellular acidification rate – proxy glycolysis. package offers flexible fast analysis plotting capabilities data.'","code":""},{"path":"/reference/ceas-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ceas: Cellular Energetics Analysis Software — ceas-package","text":"Maintainer: Rachel House rae.house@vai.org (ORCID) Authors: James Eapen james.eapen@vai.org (ORCID)","code":""},{"path":"/reference/get_energetics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","title":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","text":"Calculates ATP production glycolysis OXPHOS points defined patitioned_data","code":""},{"path":"/reference/get_energetics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","text":"","code":"get_energetics(partitioned_data, ph, pka, buffer)"},{"path":"/reference/get_energetics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","text":"partitioned_data data.table organized Seahorse OCR ECAR rates based timepoints assay cycle. Returned partition_data ph pH value energetics calculation (XF Media, 7.5) pka pKa value energetics calculation (XF Media, 6.063) buffer buffer energetics calculation (XF Media, 0.1 mpH/pmol H+)","code":""},{"path":"/reference/get_energetics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","text":"data.table glycolysis OXPHOS rates","code":""},{"path":"/reference/get_energetics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ATP Production from OXPHOS and Glycolysis — get_energetics","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) partitioned_data <- partition_data(seahorse_rates) energetics_list <- get_energetics(partitioned_data, ph = 7.4, pka = 6.093, buffer = 0.1)"},{"path":"/reference/get_energetics_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","title":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","text":"Calculates mean standard deviation ATP production glycolysis OXPHOS points defined partition_data values calculated using get_energetics function","code":""},{"path":"/reference/get_energetics_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","text":"","code":"get_energetics_summary(energetics, error_metric = \"ci\", conf_int = 0.95)"},{"path":"/reference/get_energetics_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","text":"energetics data.table Seahorse OCR ECAR rates (get_energetics) error_metric Whether calculate error standard deviation (\"sd\") confidence intervals (\"ci\") conf_int confidence interval percentage. 0 1","code":""},{"path":"/reference/get_energetics_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","text":"list groups data","code":""},{"path":"/reference/get_energetics_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ATP Production Mean and Standard Deviation — get_energetics_summary","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) partitioned_data <- partition_data(seahorse_rates) energetics_list <- get_energetics(partitioned_data, ph = 7.4, pka = 6.093, buffer = 0.1) energetics_summary <- get_energetics_summary(energetics_list)"},{"path":"/reference/get_rate_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Rates summary — get_rate_summary","title":"Rates summary — get_rate_summary","text":"Summarize OCR ECAR mean bounded standard deviations standard error confidence intervals","code":""},{"path":"/reference/get_rate_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rates summary — get_rate_summary","text":"","code":"get_rate_summary(   seahorse_rates,   measure = \"OCR\",   error_metric = \"ci\",   conf_int = 0.95 )"},{"path":"/reference/get_rate_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rates summary — get_rate_summary","text":"seahorse_rates data.table Seahorse OCR ECAR rates (imported using read_data function) measure Whether plot \"OCR\" \"ECAR\" error_metric Whether calculate error standard deviations (\"sd\") confidence intervals (\"ci\") conf_int confidence interval percentage. 0 1","code":""},{"path":"/reference/get_rate_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rates summary — get_rate_summary","text":"data.table means, standard deviations/standard error bounds around mean(sd confidence intervals)","code":""},{"path":"/reference/get_rate_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rates summary — get_rate_summary","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) # reads in data rates <- get_rate_summary(seahorse_rates, measure = \"OCR\", error_metric = \"ci\", conf_int = 0.95)"},{"path":"/reference/make_bioscope_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","title":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","text":"Wrapper create 2D plot visualizing mean standard deviation basal maximal ATP production glycolysis OXPHOS experimental group Create Bioenergetic scope plot input Seahorse Wave export, long-form rates excel files","code":""},{"path":"/reference/make_bioscope_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","text":"","code":"make_bioscope_plot(rep_list, ph, pka, buffer)"},{"path":"/reference/make_bioscope_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","text":"rep_list list Seahorse Wave excel export files. One file per replicate. Group replicates given experiment single folder, write folder's path \"seahorse_data\". can use `list.files(\"seahorse_data\") \"full.names=TRUE\") get paths files. ph pH value energetics calculation (XF Media, 7.5) pka pKa value energetics calculation (XF Media, 6.063) buffer buffer energetics calculation (XF Media, 0.1 mpH/pmol H+)","code":""},{"path":"/reference/make_bioscope_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","text":"ggplot","code":""},{"path":"/reference/make_bioscope_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bioenergetic Scope Plot Shortcut — make_bioscope_plot","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) make_bioscope_plot(rep_list, ph = 7.4, pka = 6.093, buffer = 0.1)"},{"path":"/reference/partition_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize Seahorse Data — partition_data","title":"Organize Seahorse Data — partition_data","text":"Organizes Seahorse OCR ECAR rates based defined time points (.e. Measurement column) experiment. time point can specified modifying Mito Glyco Stress Test (.e. 3 measurements per cycle X measurements)","code":""},{"path":"/reference/partition_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize Seahorse Data — partition_data","text":"","code":"partition_data(   seahorse_rates,   basal_tp = 3,   oligo_tp = 6,   maxresp_tp = 8,   nonmito_tp = 12,   maxgly_tp = 6,   fccp_ecar_tp = 8,   basal_ecar_tp = 3,   oligomon_ecar_tp = 8 )"},{"path":"/reference/partition_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize Seahorse Data — partition_data","text":"seahorse_rates data.table Seahorse OCR ECAR rates (imported using read_data function) basal_tp Must less oligo_tp oligo_tp Must less maxresp_tp maxresp_tp Must less nonmito_tp nonmito_tp Must larger maxresp_tp maxgly_tp Must oligo_tp fccp_ecar_tp Must maxresp_tp basal_ecar_tp Must basal_tp oligomon_ecar_tp Must larger basal_ecar_tp","code":""},{"path":"/reference/partition_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize Seahorse Data — partition_data","text":"list named timepoints assay cycle","code":""},{"path":"/reference/partition_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Organize Seahorse Data — partition_data","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) partitioned_data <- partition_data(seahorse_rates)"},{"path":"/reference/rate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Rate plot — rate_plot","title":"Rate plot — rate_plot","text":"Generate OCR ECAR plots","code":""},{"path":"/reference/rate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rate plot — rate_plot","text":"","code":"rate_plot(seahorse_rates, measure = \"OCR\", error_bar = \"ci\", conf_int = 0.95)"},{"path":"/reference/rate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rate plot — rate_plot","text":"seahorse_rates data.table Seahorse OCR ECAR rates (imported using read_data function) measure Whether plot \"OCR\" \"ECAR\" error_bar Whether plot error bars standard deviation (\"sd\") confidence intervals (\"ci\") conf_int confidence interval percentage. 0 1","code":""},{"path":"/reference/rate_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rate plot — rate_plot","text":"ggplot","code":""},{"path":"/reference/rate_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rate plot — rate_plot","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2) # reads in data rate_plot(seahorse_rates, measure = \"OCR\", error_bar = \"ci\", conf_int = 0.95)"},{"path":"/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Seahorse Wave Excel File — read_data","title":"Read Seahorse Wave Excel File — read_data","text":"Reads input seahore data excel Seahorse Wave File","code":""},{"path":"/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Seahorse Wave Excel File — read_data","text":"","code":"read_data(rep_list, sheet = 2)"},{"path":"/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Seahorse Wave Excel File — read_data","text":"rep_list list Seahorse Wave excel export files. One file per replicate. Group replicates given experiment single folder, write folder's path \"seahorse_data\". can use `list.files(\"seahorse_data\") \"full.names=TRUE\") get paths files. sheet number excel sheet containing long-form Seahorse data. Default 2 long-form output Seahorse Wave sheet 2","code":""},{"path":"/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Seahorse Wave Excel File — read_data","text":"seahorse_rates table","code":""},{"path":"/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Seahorse Wave Excel File — read_data","text":"","code":"rep_list <- system.file(\"extdata\", package = \"ceas\") |> list.files(pattern = \"*.xlsx\", full.names = TRUE) seahorse_rates <- read_data(rep_list, sheet = 2)"}]
